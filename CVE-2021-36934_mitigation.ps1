# Fix HiveNightmare ACLs and snapshots
# v1.0

# Forked from https://github.com/GossiTheDog/HiveNightmare

# Schedule to run as SYSTEM in a deployment tool, test locally first
# Do not run on Windows Server in case you use VSS for backups

# $checkPermissions = icacls c:\Windows\System32\config\sam
# if ($checkPermissions -like '*BUILTIN\Users:(I)(RX*)*') {

#Requires -RunAsAdministrator

$OutputFile = "$($env:temp)\$($env:computername)_CVE-2021-36934_report.txt"
Write-Host $OutputFile
$AllOk = '[All Ok]'
$AllFixedStr = '[All fixed]'

function Get-CVE-2021-36934_Vulnerable_ACLE {
    $filenames = @('SAM','SECURITY','SYSTEM')
    #$allowed = @('*\Administrators','NT*\SYSTEM');
    $allowed = @('BUILTIN\Administrators','NT AUTHORITY\SYSTEM','VORDEFINIERT\Administrators','NT-AUTORITÃ„T\SYSTEM')
    foreach ($n in $filenames) {
        try {
            $acl = (get-acl "$($env:windir)\system32\config\$n" -ErrorAction Stop).access.IdentityReference
        } catch {
            return $Error[0].Exception.Message
        }
        $notAllowed = $acl | Where-Object {$allowed -notcontains $_}
        if ($notAllowed -ne $null) {
            return [string]$notAllowed
        }
    }
    return ''    
}

$WrongACL = Get-CVE-2021-36934_Vulnerable_ACLE

if ([string]::IsNullOrEmpty($WrongACL)) {
    if (!(Test-Path -LiteralPath $OutputFile)) { 
        $AllOk | Tee-Object -FilePath $OutputFile 
    } elseif ( (Get-Content $OutputFile -Tail 1) -ne $AllOk ) {
        $AllOk | Tee-Object -FilePath $OutputFile -Append
    } else { $AllOk }  
} else {
    $WrongACL | Tee-Object -FilePath $OutputFile
    icacls "$($env:windir)\system32\config\*.*" /inheritance:e
    vssadmin delete shadows /quiet /all
    
    '=== Mitigation results ===' | Tee-Object -FilePath $OutputFile -Append
    $AllFixed = $true

    if ( [string]::IsNullOrEmpty( (Get-CVE-2021-36934_Vulnerable_ACLE) ) ) { 
        '[ACL Ok] Files permissions are correct.' | Tee-Object -FilePath $OutputFile -Append 
    } else {
        $AllFixed = $false
        '[ACL FAILED]' | Tee-Object -FilePath $OutputFile -Append 
    }
    
    if (((Get-CimInstance Win32_ShadowStorage).UsedSpace) -eq 0) {
        '[VSS Ok] Successfully deleted old volume shadow copies.' | Tee-Object -FilePath $OutputFile -Append
    } else {
        $AllFixed = $false
        '[VSS FAILED]' | Tee-Object -FilePath $OutputFile -Append
    }

    if ($AllFixed) { $AllFixedStr | Tee-Object -FilePath $OutputFile -Append }

}


 

#create new shadow
# if ($vulnerable -eq $true -and $shadowSucces -eq $true -and $permissionsSucces -eq $true) {
#     wmic shadowcopy call create Volume='C:\'
#     Write-Host ""
# }
